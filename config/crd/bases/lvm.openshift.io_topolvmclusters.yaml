
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: topolvmclusters.lvm.openshift.io
spec:
  group: lvm.openshift.io
  names:
    kind: TopoLVMCluster
    listKind: TopoLVMClusterList
    plural: topolvmclusters
    singular: topolvmcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TopoLVMCluster is the Schema for the topolvmclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TopoLVMClusterSpec defines the desired state of TopoLVMCluster
            properties:
              deviceClasses:
                description: DeviceSelector is a set of rules that should match for
                  a device to be included in this TopoLVMCluster
                items:
                  properties:
                    config:
                      description: Config for this deviceClass, lvm settings are a
                        field here
                      properties:
                        lvmConfig:
                          properties:
                            thinProvision:
                              type: boolean
                          type: object
                      type: object
                    deviceSelector:
                      description: DeviceSelector is a set of rules that should match
                        for a device to be included in this TopoLVMCluster
                      properties:
                        deviceMechanicalProperties:
                          description: DeviceMechanicalProperty denotes whether Rotational
                            or NonRotational disks should be used. by default, it
                            selects both
                          items:
                            description: DeviceMechanicalProperty holds the device's
                              mechanical spec. It can be rotational or nonRotational
                            type: string
                          type: array
                        deviceTypes:
                          description: 'Devices is the list of devices that should
                            be used for automatic detection. This would be one of
                            the types supported by the local-storage operator. Currently,
                            the supported types are: disk, part. If the list is empty
                            only `disk` types will be selected'
                          items:
                            description: DeviceType is the types that will be supported
                              by the LSO.
                            type: string
                          type: array
                        maxMatchesPerNode:
                          description: MaxMatchesPerNode to allow a use-cases where
                            not all matches on a node are consumed.
                          type: integer
                        maxSize:
                          anyOf:
                          - type: integer
                          - type: string
                          description: MaxSize is the maximum size of the device which
                            needs to be included
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        minSize:
                          anyOf:
                          - type: integer
                          - type: string
                          description: MinSize is the minimum size of the device which
                            needs to be included. Defaults to `1Gi` if empty
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        models:
                          description: Models is a list of device models. If not empty,
                            the device's model as outputted by lsblk needs to contain
                            at least one of these strings.
                          items:
                            type: string
                          type: array
                        vendors:
                          description: Vendors is a list of device vendors. If not
                            empty, the device's model as outputted by lsblk needs
                            to contain at least one of these strings.
                          items:
                            type: string
                          type: array
                      type: object
                    name:
                      description: Name of the class, the VG and possibly the storageclass.
                      type: string
                    nodeSelector:
                      description: NodeSelector chooses nodes
                      properties:
                        nodeSelectorTerms:
                          description: Required. A list of node selector terms. The
                            terms are ORed.
                          items:
                            description: A null or empty node selector term matches
                              no objects. The requirements of them are ANDed. The
                              TopologySelectorTerm type implements a subset of the
                              NodeSelectorTerm.
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements
                                  by node's labels.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchFields:
                                description: A list of node selector requirements
                                  by node's fields.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          type: array
                      required:
                      - nodeSelectorTerms
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: TopoLVMClusterStatus defines the observed state of TopoLVMCluster
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
